server.port=${port:8080}
# quando for usar a primeira vez em produção
# executa o dev, descomentando as quatro linhas abaixo para gerar
# um arquivo create.sql - script de criação do banco
#
# spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#cspring.jpa.properties.hibernate.hbm2ddl.delimiter=;

#spring.datasource.url=jdbc:postgresql://localhost:5432/nelio
#spring.datasource.username=postgres
#spring.datasource.password=root
spring.datasource.url=jdbc:mysql://localhost/nelio_teste?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#Corrige o erro @Autowired JavaMailSender
spring.mail.host: 127.0.0.1

spring.mail.host=smtp.gmail.com
spring.mail.username= testeintermat@gmail.com
spring.mail.password=  inserir aqui a senha
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.properties.mail.smtp.ssl.enable = true

